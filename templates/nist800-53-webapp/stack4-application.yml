AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  cCreateAppInstance:
    Fn::Not:
    - Fn::Equals:
      - Ref: pAppAmi
      - none
  cCreateVPCManagement:
    Fn::Not:
    - Fn::Equals:
      - Ref: pManagementSubnetA
      - 'false'
  cCreateWebInstance:
    Fn::Not:
    - Fn::Equals:
      - Ref: pWebServerAMI
      - none
  cCreaterRDSInstanceMySQL:
    Fn::Not:
    - Fn::Equals:
      - Ref: pDBName
      - none
Description: Provides resources directly required for the application, such as EC2
  instances, autoscaling groups, and databases
Mappings:
  AWSInstanceType2Arch:
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    m1.large:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.small:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m3.2xlarge:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    t1.micro:
      Arch: PV64
    t2.medium:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-35072834
      HVMG2: ami-5dd1ff5c
      PV64: ami-21072820
    ap-southeast-1:
      HVM64: ami-d6e1c584
      HVMG2: ami-fabe9aa8
      PV64: ami-20e1c572
    ap-southeast-2:
      HVM64: ami-fd4724c7
      HVMG2: ami-e98ae9d3
      PV64: ami-8b4724b1
    cn-north-1:
      HVM64: ami-ac57c595
      HVMG2: NOT_SUPPORTED
      PV64: ami-a857c591
    eu-central-1:
      HVM64: ami-b43503a9
      HVMG2: ami-b03503ad
      PV64: ami-a03503bd
    eu-west-1:
      HVM64: ami-748e2903
      HVMG2: ami-00913777
      PV64: ami-aa8f28dd
    sa-east-1:
      HVM64: ami-956cc688
      HVMG2: NOT_SUPPORTED
      PV64: ami-9d6cc680
    us-east-1:
      HVM64: ami-08842d60
      HVMG2: ami-3a329952
      PV64: ami-50842d38
    us-west-1:
      HVM64: ami-cfa8a18a
      HVMG2: ami-331b1376
      PV64: ami-c7a8a182
    us-west-2:
      HVM64: ami-8786c6b7
      HVMG2: ami-47296a77
      PV64: ami-af86c69f
Metadata:
  Identifier:
    Value: stack4-application-01
  Input:
    Description: VPC, SubnetIDs, S3 bucket names, CIDR blocks, KeyNames, AMIs, DB
      name and password
  Output:
    Description: Outputs ID of all deployed resources
  Stack:
    Value: '4'
  VersionDate:
    Value: 09292015
Outputs:
  WebsiteURL:
    Description: WordPress Website
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - rELBWeb
          - DNSName
        - /wordpress
Parameters:
  pAppAmi:
    Default: none
    Description: Which App AMI do you want to use?
    Type: String
  pAppInstanceType:
    Description: Instance type for the app webservers
    Type: String
  pAppPrivateSubnetA:
    Description: WebApp Subnet A
    Type: String
  pAppPrivateSubnetB:
    Description: WebApp Subnet B
    Type: String
  pDBAllocatedStorage:
    Description: Allocated Storage (in GB) for RDS instance
    Type: String
  pDBClass:
    Description: Instance class of RDS instance
    Type: String
  pDBName:
    Description: Name of RDS Database
    Type: String
  pDBPassword:
    Description: Password of DB Instance
    NoEcho: 'true'
    Type: String
  pDBPrivateSubnetA:
    Description: rDBPrivateSubnetA
    Type: String
  pDBPrivateSubnetB:
    Description: rDBPrivateSubnetB
    Type: String
  pDBUser:
    Description: Username of DB Instance
    Type: String
  pDMZSubnetA:
    Description: DMZ Subnet A
    Type: String
  pDMZSubnetB:
    Description: DMZ Subnet B
    Type: String
  pKeyName:
    Default: ''
    Description: Key Name for Instance
    Type: String
  pManagementSubnetA:
    Description: rManagementSubnetA
    Type: String
  pNatInstanceType:
    Description: Nat instance type
    Type: String
  pProductionCIDR:
    Description: Production VPC CIDR
    Type: String
  pProductionVPC:
    Description: Production VPC
    Type: String
  pRegionAZ1Name:
    Description: rDBPrivateSubnetB
    Type: String
  pRegionAZ2Name:
    Description: rDBPrivateSubnetB
    Type: String
  pSecurityGroupApp:
    Description: SG for Webapp
    Type: String
  pSecurityGroupMgmtBastionHost:
    Description: SG for MGMT Bastion
    Type: String
  pSecurityGroupRDS:
    Description: Security group for MySQLRDS
    Type: String
  pSecurityGroupWeb:
    Description: SG for Webserver
    Type: String
  pWebInstanceType:
    Description: Instance type for the webservers
    Type: String
  pWebServerAMI:
    Default: none
    Description: 'Which webserver AMI do you want to use, default '
    Type: String
Resources:
  rAutoScalingConfigApp:
    Condition: cCreateAppInstance
    DependsOn: rRDSInstanceMySQL
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          wordpress_install:
          - install_cfn
          - install_wordpress
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content:
                Fn::Join:
                - ''
                - - '[main]

                    '
                  - stack=
                  - Ref: AWS::StackId
                  - '

                    '
                  - region=
                  - Ref: AWS::Region
                  - '

                    '
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                Fn::Join:
                - ''
                - - '[cfn-auto-reloader-hook]

                    '
                  - 'triggers=post.update

                    '
                  - 'path=Resources.rAutoScalingConfigApp.Metadata.AWS::CloudFormation::Init

                    '
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - Ref: AWS::StackName
                  - '         --resource rAutoScalingConfigApp '
                  - '         --configsets wordpress_install '
                  - '         --region '
                  - Ref: AWS::Region
                  - '

                    '
              group: root
              mode: '000400'
              owner: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        install_wordpress:
          commands:
            01_configure_wordpress:
              command: /tmp/create-wp-config
              cwd: /var/www/html/wordpress
          files:
            /tmp/create-wp-config:
              content:
                Fn::Join:
                - ''
                - - '#!/bin/bash

                    '
                  - 'cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php

                    '
                  - sed -i "s/'database_name_here'/'
                  - Ref: pDBName
                  - '''/g" wp-config.php

                    '
                  - sed -i "s/'username_here'/'
                  - Ref: pDBUser
                  - '''/g" wp-config.php

                    '
                  - sed -i "s/'password_here'/'
                  - Ref: pDBPassword
                  - '''/g" wp-config.php

                    '
                  - sed -i "s/'localhost'/'
                  - Fn::GetAtt:
                    - rRDSInstanceMySQL
                    - Endpoint.Address
                  - '''/g" wp-config.php

                    '
              group: root
              mode: '000500'
              owner: root
          packages:
            yum:
              httpd: []
              mysql: []
              php: []
              php-mysql: []
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
          sources:
            /var/www/html: http://wordpress.org/latest.tar.gz
    Properties:
      ImageId:
        Ref: pAppAmi
      InstanceType:
        Ref: pAppInstanceType
      KeyName:
        Ref: pKeyName
      SecurityGroups:
      - Ref: pSecurityGroupApp
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - '#!/bin/bash -xe

              '
            - 'yum update -y aws-cfn-bootstrap

              '
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - Ref: AWS::StackName
            - '         --resource rAutoScalingConfigApp '
            - '         --configsets wordpress_install '
            - '         --region '
            - Ref: AWS::Region
            - '

              '
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - Ref: AWS::StackName
            - '         --resource WebServerGroup '
            - '         --region '
            - Ref: AWS::Region
            - '

              '
    Type: AWS::AutoScaling::LaunchConfiguration
  rAutoScalingConfigWeb:
    Condition: cCreateWebInstance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            /tmp/nginx/default.conf:
              content:
                Fn::Join:
                - ''
                - - 'server {

                    '
                  - 'listen 80;

                    '
                  - 'listen [::]:80 default ipv6only=on;

                    '
                  - 'charset utf-8;

                    '
                  - 'location / {

                    '
                  - 'proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

                    '
                  - 'proxy_set_header Host $http_host;

                    '
                  - 'proxy_redirect off;


                    '
                  - proxy_pass http://
                  - Fn::GetAtt:
                    - rELBApp
                    - DNSName
                  - '/;

                    '
                  - '

                    '
                  - '}

                    '
                  - '}

                    '
              group: root
              mode: '000755'
              owner: root
          packages:
            yum:
              git: []
              java-1.6.0-openjdk-devel: []
              nginx: []
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/nginx/conf.d/default.conf
    Properties:
      AssociatePublicIpAddress: 'True'
      ImageId:
        Ref: pWebServerAMI
      InstanceType:
        Ref: pWebInstanceType
      KeyName:
        Ref: pKeyName
      SecurityGroups:
      - Ref: pSecurityGroupWeb
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - '#!/bin/bash

              '
            - 'yum update -y aws-cfn-bootstrap

              '
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - Ref: AWS::StackName
            - '         --resource rAutoScalingConfigWeb '
            - '         --region '
            - Ref: AWS::Region
            - '

              '
            - '## Nginx setup

              '
            - 'sleep 5

              '
            - 'cp /tmp/nginx/default.conf /etc/nginx/conf.d/default.conf

              '
            - 'sleep 5

              '
            - 'service nginx stop

              '
            - 'service nginx start

              '
    Type: AWS::AutoScaling::LaunchConfiguration
  rAutoScalingDownApp:
    Condition: cCreateAppInstance
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: rAutoScalingGroupApp
      Cooldown: '1'
      ScalingAdjustment: '1'
    Type: AWS::AutoScaling::ScalingPolicy
  rAutoScalingDownWeb:
    Condition: cCreateWebInstance
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: rAutoScalingGroupWeb
      Cooldown: '500'
      ScalingAdjustment: '-1'
    Type: AWS::AutoScaling::ScalingPolicy
  rAutoScalingGroupApp:
    Condition: cCreateAppInstance
    DependsOn: rAutoScalingConfigApp
    Properties:
      AvailabilityZones:
      - Ref: pRegionAZ1Name
      - Ref: pRegionAZ2Name
      LaunchConfigurationName:
        Ref: rAutoScalingConfigApp
      LoadBalancerNames:
      - Ref: rELBApp
      MaxSize: '4'
      MinSize: '2'
      Tags:
      - Key: Name
        PropagateAtLaunch: 'true'
        Value: AppServer
      VPCZoneIdentifier:
      - Ref: pAppPrivateSubnetA
      - Ref: pAppPrivateSubnetB
    Type: AWS::AutoScaling::AutoScalingGroup
  rAutoScalingGroupWeb:
    Condition: cCreateWebInstance
    DependsOn:
    - rAutoScalingConfigWeb
    - rAutoScalingGroupApp
    Properties:
      AvailabilityZones:
      - Ref: pRegionAZ1Name
      - Ref: pRegionAZ2Name
      LaunchConfigurationName:
        Ref: rAutoScalingConfigWeb
      LoadBalancerNames:
      - Ref: rELBWeb
      MaxSize: '4'
      MinSize: '2'
      Tags:
      - Key: Name
        PropagateAtLaunch: 'true'
        Value: Proxy Server
      VPCZoneIdentifier:
      - Ref: pDMZSubnetA
      - Ref: pDMZSubnetB
    Type: AWS::AutoScaling::AutoScalingGroup
  rAutoScalingUpApp:
    Condition: cCreateAppInstance
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: rAutoScalingGroupApp
      Cooldown: '1'
      ScalingAdjustment: '-1'
    Type: AWS::AutoScaling::ScalingPolicy
  rAutoScalingUpWeb:
    Condition: cCreateWebInstance
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName:
        Ref: rAutoScalingGroupWeb
      Cooldown: '500'
      ScalingAdjustment: '1'
    Type: AWS::AutoScaling::ScalingPolicy
  rBastionHostInstance:
    Condition: cCreateVPCManagement
    Properties:
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: pNatInstanceType
          - Arch
      InstanceType:
        Ref: pNatInstanceType
      KeyName:
        Ref: pKeyName
      NetworkInterfaces:
      - DeviceIndex: '0'
        NetworkInterfaceId:
          Ref: rENIBastionHost
      Tags:
      - Key: Name
        Value: Management Jump Server
    Type: AWS::EC2::Instance
  rCWAlarmHighCPUApp:
    Condition: cCreateAppInstance
    Properties:
      AlarmActions:
      - Ref: rAutoScalingDownApp
      AlarmDescription: Alarm if CPU too high or metric disappears indicating instance
        is down
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: rAutoScalingGroupApp
      EvaluationPeriods: '1'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold: '50'
    Type: AWS::CloudWatch::Alarm
  rCWAlarmHighCPUWeb:
    Condition: cCreateWebInstance
    Properties:
      AlarmActions:
      - Ref: rAutoScalingUpWeb
      AlarmDescription: Alarm if CPU too high or metric disappears indicating instance
        is down
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: rAutoScalingGroupWeb
      EvaluationPeriods: '1'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold: '50'
    Type: AWS::CloudWatch::Alarm
  rCWAlarmLowCPUApp:
    Condition: cCreateAppInstance
    Properties:
      AlarmActions:
      - Ref: rAutoScalingUpApp
      AlarmDescription: Alarm if CPU too too, remove a webseerver
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: rAutoScalingGroupApp
      EvaluationPeriods: '1'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold: '10'
    Type: AWS::CloudWatch::Alarm
  rCWAlarmLowCPUWeb:
    Condition: cCreateWebInstance
    Properties:
      AlarmActions:
      - Ref: rAutoScalingDownWeb
      AlarmDescription: Alarm if CPU too too, remove a webserver
      ComparisonOperator: LessThanThreshold
      Dimensions:
      - Name: AutoScalingGroupName
        Value:
          Ref: rAutoScalingGroupWeb
      EvaluationPeriods: '1'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold: '10'
    Type: AWS::CloudWatch::Alarm
  rDBSubnetGroup:
    Properties:
      DBSubnetGroupDescription: MySQL RDS Subnet Group
      SubnetIds:
      - Ref: pDBPrivateSubnetA
      - Ref: pDBPrivateSubnetB
    Type: AWS::RDS::DBSubnetGroup
  rEIPAssociationBastion:
    Condition: cCreateVPCManagement
    Properties:
      AllocationId:
        Fn::GetAtt:
        - rEIPrBastionHostInstance
        - AllocationId
      NetworkInterfaceId:
        Ref: rENIBastionHost
    Type: AWS::EC2::EIPAssociation
  rEIPrBastionHostInstance:
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  rELBApp:
    Properties:
      HealthCheck:
        HealthyThreshold: '2'
        Interval: '15'
        Target: TCP:80
        Timeout: '5'
        UnhealthyThreshold: '3'
      Listeners:
      - InstancePort: '80'
        InstanceProtocol: HTTP
        LoadBalancerPort: '80'
        Protocol: HTTP
      Scheme: internal
      SecurityGroups:
      - Ref: pSecurityGroupApp
      Subnets:
      - Ref: pAppPrivateSubnetA
      - Ref: pAppPrivateSubnetB
      Tags:
      - Key: Name
        Value: ProxyELB
    Type: AWS::ElasticLoadBalancing::LoadBalancer
  rELBWeb:
    Properties:
      HealthCheck:
        HealthyThreshold: '2'
        Interval: '30'
        Target: TCP:80
        Timeout: '5'
        UnhealthyThreshold: '5'
      Listeners:
      - InstancePort: '80'
        InstanceProtocol: HTTP
        LoadBalancerPort: '80'
        Protocol: HTTP
      SecurityGroups:
      - Ref: pSecurityGroupWeb
      Subnets:
      - Ref: pDMZSubnetA
      - Ref: pDMZSubnetB
      Tags:
      - Key: Name
        Value: ProxyELB
    Type: AWS::ElasticLoadBalancing::LoadBalancer
  rENIBastionHost:
    Condition: cCreateVPCManagement
    Properties:
      Description: Interface for control traffic such as SSH
      GroupSet:
      - Ref: pSecurityGroupMgmtBastionHost
      SourceDestCheck: 'true'
      SubnetId:
        Ref: pManagementSubnetA
      Tags:
      - Key: Network
        Value: BastionControl
    Type: AWS::EC2::NetworkInterface
  rRDSInstanceMySQL:
    Condition: cCreaterRDSInstanceMySQL
    DependsOn: rDBSubnetGroup
    Properties:
      AllocatedStorage:
        Ref: pDBAllocatedStorage
      DBInstanceClass:
        Ref: pDBClass
      DBName:
        Ref: pDBName
      DBSubnetGroupName:
        Ref: rDBSubnetGroup
      Engine: MySQL
      MasterUserPassword:
        Ref: pDBPassword
      MasterUsername:
        Ref: pDBUser
      MultiAZ: 'true'
      StorageEncrypted: 'true'
      VPCSecurityGroups:
      - Ref: pSecurityGroupRDS
    Type: AWS::RDS::DBInstance
