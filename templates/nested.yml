AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template Templates_within_Templates: This
  template demonstrates using embedded templates to build an end to end solution from
  basic building blocks. It builds a PHP Hello World sample application that connects
  to an Amazon Relational Database Service database instance and displays information
  about the web server. **WARNING** This template creates one or more Amazon EC2 instances
  and CloudWatch alarms. You will be billed for the AWS resources used if you create
  a stack from this template.'
Mappings:
  RegionMap:
    ap-northeast-1:
      s3Bucket: https://s3.amazonaws.com/cloudformation-templates-ap-northeast-1
    ap-southeast-1:
      s3Bucket: https://s3.amazonaws.com/cloudformation-templates-ap-southeast-1
    ap-southeast-2:
      s3Bucket: https://s3.amazonaws.com/cloudformation-templates-ap-southeast-2
    eu-west-1:
      s3Bucket: https://s3.amazonaws.com/cloudformation-templates-eu-west-1
    sa-east-1:
      s3Bucket: https://s3.amazonaws.com/cloudformation-templates-sa-east-1
    us-east-1:
      s3Bucket: https://s3.amazonaws.com/@@@CFN_TEMPLATES_USEAST1_DIR@@@
    us-west-1:
      s3Bucket: https://s3.amazonaws.com/cloudformation-templates-us-west-1
    us-west-2:
      s3Bucket: https://s3.amazonaws.com/cloudformation-templates-us-west-2
Outputs:
  URL:
    Description: URL of the website
    Value:
      Fn::GetAtt:
      - WebServer
      - Outputs.URL
Parameters:
  DatabasePassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: Test database admin account password
    MaxLength: '41'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  DatabaseType:
    AllowedValues:
    - db.m1.small
    - db.m1.large
    - db.m1.xlarge
    - db.m2.xlarge
    - db.m2.2xlarge
    - db.m2.4xlarge
    ConstraintDescription: must be a valid RDS DB Instance type.
    Default: db.m1.small
    Description: The database instance type
    Type: String
  DatabaseUser:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Description: Test database admin account name
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  InstanceType:
    AllowedValues:
    - t1.micro
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.xlarge
    - m3.2xlarge
    - c1.medium
    - c1.xlarge
    - cc1.4xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m1.small
    Description: WebServer EC2 instance type
    Type: String
  KeyName:
    AllowedPattern: '[\x20-\x7E]*'
    ConstraintDescription: can contain only ASCII characters.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the web server
    MaxLength: '255'
    MinLength: '1'
    Type: String
  OperatorEmail:
    Description: EMail address to notify if there are operational issues
    Type: String
  SSHLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    MaxLength: '18'
    MinLength: '9'
    Type: String
Resources:
  AlarmTopic:
    Properties:
      Subscription:
      - Endpoint:
          Ref: OperatorEmail
        Protocol: email
    Type: AWS::SNS::Topic
  AppDatabase:
    Metadata:
      Comment: Application database.
    Properties:
      Parameters:
        AlarmTopic:
          Ref: AlarmTopic
        DBInstanceClass:
          Ref: DatabaseType
        DBPassword:
          Ref: DatabasePassword
        DBUser:
          Ref: DatabaseUser
        EC2SecurityGroup:
          Ref: EC2SecurityGroup
      TemplateURL:
        Fn::Join:
        - /
        - - Fn::FindInMap:
            - RegionMap
            - Ref: AWS::Region
            - s3Bucket
          - RDS_MySQL_55.template
    Type: AWS::CloudFormation::Stack
  EC2SecurityGroup:
    Properties:
      GroupDescription: Open up SSH access
      SecurityGroupIngress:
      - CidrIp:
          Ref: SSHLocation
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
    Type: AWS::EC2::SecurityGroup
  WebServer:
    Metadata:
      Comment: Create web server farm attached to database.
    Properties:
      Parameters:
        AlarmTopic:
          Ref: AlarmTopic
        DatabaseEndpoint:
          Fn::GetAtt:
          - AppDatabase
          - Outputs.DBAddress
        DatabasePassword:
          Ref: DatabasePassword
        DatabasePort:
          Fn::GetAtt:
          - AppDatabase
          - Outputs.DBPort
        DatabaseUser:
          Ref: DatabaseUser
        EC2SecurityGroup:
          Ref: EC2SecurityGroup
        InstanceType:
          Ref: InstanceType
        KeyName:
          Ref: KeyName
        WebServerPort: '8888'
      TemplateURL:
        Fn::Join:
        - /
        - - Fn::FindInMap:
            - RegionMap
            - Ref: AWS::Region
            - s3Bucket
          - PHP_Database_Application.template
    Type: AWS::CloudFormation::Stack

